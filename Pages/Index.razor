@page "/"
@using Microsoft.Graph
@using System.Globalization
@using System.Diagnostics

@inject BacklogsWeb.Graph.GraphClientFactory clientFactory

<div class="jumbotron">
    <h1>Welcome to Backlogs!</h1>
    <AuthorizeView>
        <Authorized>
            <h2>Recently Added</h2>
            <ul>
                @foreach(var backlog in recentlyAdded)
                {
                    <li>@backlog.Name</li>
                    <li>@backlog.Director</li>
                }
            </ul>
        </Authorized>
        <NotAuthorized>
            <a class="btn btn-primary btn-large" href="authentication/login">Click here to sign in</a>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    private GraphServiceClient? graphClient;
    private List<Backlog>? recentlyAdded;

    List<Backlog>? incompleteBacklogs;
    List<Backlog>? completedBacklogs;

    protected override async Task OnInitializedAsync()
    {
        recentlyAdded = new List<Backlog>();
        var user = (await authenticationState).User;

        graphClient = clientFactory.GetAuthenticatedClient();

        await BacklogsSingleton.GetInstance().ReadDataAsync(graphClient);
        incompleteBacklogs = BacklogsSingleton.GetInstance().GetIncompleteBacklogs();

        foreach (var backlog in incompleteBacklogs.OrderByDescending(b => DateTimeOffset.Parse(b.CreatedDate, CultureInfo.InvariantCulture)).Skip(0).Take(6))
        {
            recentlyAdded?.Add(backlog);
        }
    }
}